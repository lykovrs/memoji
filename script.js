function memoji(
  rootElement,
  timerElement,
  classCard,
  openCardClass,
  timeRound,
) {
  var emojies = [
    { icon: "ü¶Ä", id: 1 },
    { icon: "ü¶Ä", id: 2 },
    { icon: "üêü", id: 3 },
    { icon: "üêü", id: 4 },
    { icon: "üêä", id: 5 },
    { icon: "üêä", id: 6 },
    { icon: "üêì", id: 7 },
    { icon: "üêì", id: 8 },
    { icon: "ü¶É", id: 9 },
    { icon: "ü¶É", id: 10 },
    { icon: "üêø", id: 11 },
    { icon: "üêø", id: 12 },
  ];
  // –°—á–µ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
  var timeCounter = 0;

  // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–º–æ–¥–∂–∏
  emojies = shuffle(emojies);
  // –ì–æ—Ç–æ–≤–∏–º –∑–∞–≥–æ—Ç–æ–≤–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏
  var element = document.createElement("article");
  element.dataset.card = "";
  element.classList.add(classCard);
  // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  var collection = emojies.map(function(item) {
    var newItem = element.cloneNode(false);
    newItem.dataset.emoji = item.icon;
    newItem.dataset.emojiId = item.id;
    rootElement.appendChild(newItem);
    return newItem;
  });
  var prevControl = element;
  // –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫
  rootElement.addEventListener("click", function(ev) {
    var control = ev.target;

    // –≤—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–ª–µ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã-–∫–∞—Ä—Ç–æ—á–∫–∏
    if ("card" in control.dataset) {
      var currentId = control.dataset.emojiId;
      var currentIcon = control.dataset.emoji;
      var prevId = prevControl.dataset.emojiId;
      var prevIcon = prevControl.dataset.emoji;

      // –µ—Å–ª–∏ –ø–∞—Ä–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      if ("ready" in control.dataset) return;

      // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –ø–æ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –∫–∞—Ä—Ç–æ—á–∫–µ
      if (prevId === currentId) return;

      // –∫–ª–∏–∫ –ø–æ —Ä–∞–∑–Ω—ã–º –∫–∞—Ä—Ç–æ—á–∫–∞–º —Å —Ä–∞–∑–Ω—ã–º–∏–º –∏–∫–æ–Ω–∫–∞–º–∏
      if (currentIcon !== prevIcon) {
        cardClose(prevControl, openCardClass);
        cardOpen(control, openCardClass);
      }

      // –∫–ª–∏–∫ –ø–æ —Ä–∞–∑–Ω—ã–º –∫–∞—Ä—Ç–æ—á–∫–∞–º —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –∏–∫–æ–Ω–∫–æ–π
      if (currentIcon === prevIcon) {
        cardOpen(control, openCardClass);
        control.dataset.ready = true;
        prevControl.dataset.ready = true;
        prevControl = element;

        if (calculateResult(collection)) {
          showModal("win", restartSession);
        }

        return;
      }

      // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      prevControl = control;
    }
  });

  // –Ω–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å—á–µ—Ç —Ä–∞—É–Ω–¥–∞ –∏–≥—Ä—ã
  tick(
    function() {
      renderTime(timerElement, timeCounter);
    },
    function() {
      if (!calculateResult(collection)) {
        showModal("loose", restartSession);
      }
    },
    timeRound,
  );

  /**
   * –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
   * @param array –≤—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å–∏–≤
   * @returns {*}
   */
  function shuffle(array) {
    var currentIndex = array.length,
      temporaryValue,
      randomIndex;

    while (0 !== currentIndex) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex -= 1;

      temporaryValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = temporaryValue;
    }

    return array;
  }

  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–±–µ–∫ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
   * @param iterationCallback –∫–æ–ª–±–µ–∫ –Ω–∞ –∫–∂–¥—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é
   * @param readyCallback –∫–æ–ª–±–µ–∫ –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
   * @param iterations –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –≤—ã–∑–æ–≤–∞
   */
  function tick(iterationCallback, readyCallback, iterations) {
    setTimeout(function() {
      timeCounter += 1;
      iterationCallback();
      if (timeCounter <= iterations)
        tick(iterationCallback, readyCallback, iterations);
      else readyCallback();
    }, 1000);
  }

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –æ—Ç—Å—á–µ—Ç–∞
   * @param element —ç–ª–µ–º–µ–Ω—Ç, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª—è–µ–º
   * @param time –æ–±–Ω–æ–≤–ª—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   */
  function renderTime(element, time) {
    element.innerHTML = "00-" + (+time < 10 ? "0" + time : time);
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É
   * @param card —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
   * @param openCardClass –¥–æ–±–∞–≤–ª—è–µ–º—ã –∫–ª–∞—Å—Å
   */
  function cardOpen(card, openCardClass) {
    card.classList.add(openCardClass);
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É
   * @param card —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
   * @param openCardClass —É–¥–∞–ª—è–µ–º—ã–π –∫–ª–∞—Å—Å
   */
  function cardClose(card, openCardClass) {
    card.classList.remove(openCardClass);
  }

  /**
   * –î–µ–ª–∞–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @param arr –º–∞—Å—Å–∏–≤ —Å –¥–æ–º-—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
   * @returns {boolean} —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã
   */
  function calculateResult(arr) {
    return arr.every(function(item) {
      return item.dataset.ready;
    });
  }

  /**
   * –ü–æ–¥–Ω–∏–º–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
   * @param text –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É—é—â–∏–π —Ç–µ–∫—Å—Ç
   * @param callback –∫–æ–ª–±–µ–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
   */
  function showModal(text, callback) {
    var button = document.createElement("button");
    button.classList.add("modal__action");
    button.innerText = "Try again";
    button.addEventListener("click", function(ev) {
      ev.preventDefault();
      callback();
    });

    var message = document.createElement("h2");
    message.classList.add("modal__message");
    message.innerText = text;

    var container = document.createElement("article");
    container.classList.add("modal__container");

    container.appendChild(message);
    container.appendChild(button);

    var overlay = document.createElement("div");
    overlay.classList.add("modal");

    overlay.appendChild(container);
    document.body.appendChild(overlay);
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ
   */
  function restartSession() {
    window.location.reload();
  }
}
